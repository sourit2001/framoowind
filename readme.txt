# Framoo 边框素材网站 - 开发需求文档

## 项目概述
Framoo是一个专注于提供高质量图片边框素材的网站。用户可以浏览、预览和下载各种PNG格式的边框图片。网站采用艺术气息与苹果风格设计，提供多语言支持，并且具备简单的图片更新机制。

## 核心功能需求

### 1. 图片浏览与下载
- 网格视图展示所有可用的边框素材
- 支持分类浏览和筛选功能
- 点击图片弹出详细信息
- 提供高质量PNG格式下载

### 2. 图片详情弹窗
- 显示图片名称、尺寸信息和简介
- 高清预览功能
- 直观的下载按钮
- 苹果风格的毛玻璃效果设计

### 3. 多语言支持
- 支持7种语言:
  * 简体中文
  * 繁体中文
  * 英语
  * 日语
  * 韩语
  * 法语
  * 德语
- 语言切换不影响用户当前浏览位置

### 4. 自动更新机制
- 提供简单的方式添加新图片素材
- 将新图片添加到指定文件夹后自动更新网站内容
- 无需修改代码即可扩展素材库

## 技术规格

### 前端设计
- 响应式设计，支持移动端和桌面端
- 采用苹果设计风格：简洁、优雅、高质感
- 无障碍设计，确保所有用户都能轻松使用

### 后端架构
- 基于JSON配置文件管理图片元数据
- 文件系统自动扫描机制
- 图片优化处理，确保快速加载

### 目录结构
```
framoo/
├── index.html              # 主页
├── css/                    # 样式文件
├── js/                     # JavaScript文件
├── images/                 # 边框图片目录
│   ├── borders/            # 边框素材分类1
│   ├── frames/             # 边框素材分类2
│   └── ...
├── data/                   # 数据文件
│   ├── config.json         # 网站配置
│   └── images.json         # 图片元数据
└── locales/                # 多语言文件
    ├── zh-CN.json          # 简体中文
    ├── zh-TW.json          # 繁体中文
    ├── en.json             # 英语
    ├── ja.json             # 日语
    ├── ko.json             # 韩语
    ├── fr.json             # 法语
    └── de.json             # 德语
```

## 图片管理规范

### 图片命名规则
- 使用统一的编号系统，如: frame_001.png, frame_002.png
- 避免使用特定语言的文件名，便于多语言支持

### 元数据要求
每个图片需在images.json中包含以下信息:
```json
{
  "id": "frame_001",
  "filename": "frame_001.png",
  "dimensions": {
    "width": 800,
    "height": 1000
  },
  "category": "vintage",
  "tags": ["复古", "老式", "怀旧"],
  "description": {
    "zh-CN": "复古风格拍立得边框",
    "zh-TW": "復古風格拍立得邊框",
    "en": "Vintage polaroid frame",
    "ja": "ビンテージポラロイドフレーム",
    "ko": "빈티지 폴라로이드 프레임",
    "fr": "Cadre polaroid vintage",
    "de": "Vintage-Polaroid-Rahmen"
  }
}
```

## 更新图片流程

1. 准备PNG格式的边框图片
2. 将图片放入对应的分类目录
3. 更新images.json文件添加新图片的元数据
   - 可使用自动化脚本生成元数据
4. 网站将在下次加载时自动显示新图片

## 设计参考

- 界面风格：苹果官网 (www.apple.com)
- 色彩方案：简洁、高对比度
- 交互效果：流畅、自然的过渡动画
- 字体：系统默认无衬线字体

## 开发路线图

### 第一阶段：基础功能
- 创建响应式网站框架
- 实现基本的图片浏览和下载功能
- 添加简体中文和英文支持

### 第二阶段：增强功能
- 添加图片详情弹窗
- 完善多语言支持
- 实现自动更新机制

### 第三阶段：优化与完善
- 性能优化
- 用户体验改进
- 添加分析统计
